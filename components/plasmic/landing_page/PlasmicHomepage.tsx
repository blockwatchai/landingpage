// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: kfPEmQD4mqLJRqSWK8kuhr
// Component: Uaiq5RFrvCZT

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { NavigationBar } from "@plasmicpkgs/plasmic-nav"; // plasmic-import: jGx9tiKJoex/codeComponent
import Button from "../../Button"; // plasmic-import: PmfugSdbUKr/component

import { useScreenVariants as useScreenVariantseaUlkX4CjEm3 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Ea_ulkX4cjEm3/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_landing_page.module.css"; // plasmic-import: kfPEmQD4mqLJRqSWK8kuhr/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: Uaiq5RFrvCZT/css

import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: qo4YR1dBDc/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: Y5Er5CI_x5G/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: yuoNdN3t3wp/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: uOussjhxUI/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: R2xXt7fqB6/icon

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  navigationBar?: p.Flex<typeof NavigationBar>;
  h6?: p.Flex<"h6">;
  h1?: p.Flex<"h1">;
  items?: p.Flex<"div">;
  items2?: p.Flex<"div">;
  items3?: p.Flex<"div">;
  items4?: p.Flex<"div">;
  items5?: p.Flex<"div">;
  items6?: p.Flex<"div">;
  items7?: p.Flex<"div">;
  items8?: p.Flex<"div">;
  h3?: p.Flex<"h3">;
};

export interface DefaultHomepageProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantseaUlkX4CjEm3()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicHomepage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__ebrgi)}>
            <NavigationBar
              data-plasmic-name={"navigationBar"}
              data-plasmic-override={overrides.navigationBar}
              brand={
                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__l9UNm
                  )}
                  component={Link}
                  href={"#" as const}
                  platform={"nextjs"}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___6TxNc)}
                    displayHeight={"40px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={{
                      src: "/plasmic/landing_page/images/bloackwatchlogopng.png",
                      fullWidth: 229,
                      fullHeight: 235,
                      aspectRatio: undefined
                    }}
                  />

                  <h6
                    data-plasmic-name={"h6"}
                    data-plasmic-override={overrides.h6}
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6
                    )}
                  >
                    {"BlockWatchAI"}
                  </h6>
                </p.Stack>
              }
              className={classNames("__wab_instance", sty.navigationBar)}
              closeButton={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__e40OO)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={"https://static1.plasmic.app/close.svg" as const}
                />
              }
              itemsGap={24 as const}
              menuItems={
                <React.Fragment>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__tuQ2D
                    )}
                    component={Link}
                    href={"/" as const}
                    platform={"nextjs"}
                  >
                    {"Home"}
                  </p.PlasmicLink>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__xbvKs
                    )}
                    component={Link}
                    href={"#about" as const}
                    platform={"nextjs"}
                  >
                    {"About"}
                  </p.PlasmicLink>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___6VPuh
                    )}
                    component={Link}
                    href={"#products" as const}
                    platform={"nextjs"}
                  >
                    {"Product"}
                  </p.PlasmicLink>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__nQfrA
                    )}
                    component={Link}
                    href={"#teams" as const}
                    platform={"nextjs"}
                  >
                    {"Teams"}
                  </p.PlasmicLink>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__tmS4C
                    )}
                    component={Link}
                    href={"#roadmap" as const}
                    platform={"nextjs"}
                  >
                    {"Roadmap"}
                  </p.PlasmicLink>
                </React.Fragment>
              }
              openButton={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__skbEf)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={"https://static1.plasmic.app/menu.svg" as const}
                />
              }
              responsiveBreakpoint={768 as const}
            />
          </div>
          <section className={classNames(projectcss.all, sty.section__oEMp)}>
            <div className={classNames(projectcss.all, sty.freeBox__fV4Ji)}>
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                {"Building Trust \nin The Decentralized World with AI"}
              </h1>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gnynY
                )}
              >
                {
                  "Blockwatch AI is a leading Artificial intelligence  analytics and monitoring platform for  real-time insights on the blockchain"
                }
              </div>
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__whHc)}
                >
                  <Button
                    className={classNames("__wab_instance", sty.button__zmqcL)}
                    color={"link" as const}
                    link={
                      "https://blockwatchai.gitbook.io/blockwatchai/" as const
                    }
                    showStartIcon={true}
                    startIcon={
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg__o2EM)}
                        role={"img"}
                      />
                    }
                  >
                    {"Read Our Docs"}
                  </Button>
                  <Button
                    className={classNames("__wab_instance", sty.button__skz3U)}
                    color={"white" as const}
                  >
                    {"Join Whitelist"}
                  </Button>
                </p.Stack>
              ) : null}
            </div>
          </section>
          <section
            className={classNames(projectcss.all, sty.section__dQ2M)}
            id={"about" as const}
          >
            <div className={classNames(projectcss.all, sty.freeBox__aGoLv)}>
              <div className={classNames(projectcss.all, sty.columns__chl49)}>
                <div className={classNames(projectcss.all, sty.column__s4M5E)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2___3B9Xa
                    )}
                  >
                    {"About Blockwatch AI"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__b7JTb
                    )}
                  >
                    {
                      "Blockwatch AI is a leading blockchain analytics and monitoring platform that provides real-time insights into the behavior of digital assets and transactions on the blockchain. Their cutting-edge technology and advanced data analytics capabilities enable users to track and analyze blockchain data with unprecedented accuracy and detail. \n\nBlockwatch AI offers a range of tools and services to help businesses, investors, and regulators stay informed about the blockchain ecosystem and make data-driven decisions. With a team of experienced blockchain experts and data scientists, Blockwatch AI is at the forefront of the blockchain analytics industry.\n"
                    }
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column___1Avoa)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__kcyM1)}
                    displayHeight={"100%" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/landing_page/images/sboutshieldpng.png",
                      fullWidth: 1024,
                      fullHeight: 1024,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
          </section>
          <section
            className={classNames(projectcss.all, sty.section__tY3Dg)}
            id={"products" as const}
          >
            <div className={classNames(projectcss.all, sty.freeBox__ga7Of)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__ppYpN
                )}
              >
                {"Our Products"}
              </h2>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__oy2KN)}
              >
                <div className={classNames(projectcss.all, sty.column__e7KrP)}>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"items"}
                      data-plasmic-override={overrides.items}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.items)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__pInLl)}
                        displayHeight={"90px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/landing_page/images/cpupng2.png",
                          fullWidth: 90,
                          fullHeight: 90,
                          aspectRatio: undefined
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__yQdk
                        )}
                      >
                        {"Blockwatch BOT"}
                      </h5>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lGOcL
                        )}
                      >
                        {
                          "Using machine learning and AI to detect and prevent fraudulent activities "
                        }
                      </div>
                    </p.Stack>
                  ) : null}
                </div>
                <div className={classNames(projectcss.all, sty.column__swzks)}>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"items2"}
                      data-plasmic-override={overrides.items2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.items2)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__g6Tba)}
                        displayHeight={"90px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/landing_page/images/walletpng.png",
                          fullWidth: 95,
                          fullHeight: 99,
                          aspectRatio: undefined
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__evhfV
                        )}
                      >
                        {"Blockwatch Wallet"}
                      </h5>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__acEwn
                        )}
                      >
                        {
                          "Integrated with artificial intelligence algorithms to enhance its functionality and security"
                        }
                      </div>
                    </p.Stack>
                  ) : null}
                </div>
                <div className={classNames(projectcss.all, sty.column__mrZpv)}>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"items3"}
                      data-plasmic-override={overrides.items3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.items3)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__k0DdJ)}
                        displayHeight={"90px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/landing_page/images/middlepng.png",
                          fullWidth: 65,
                          fullHeight: 90,
                          aspectRatio: undefined
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__kyiHv
                        )}
                      >
                        {"Blockwatch Swap"}
                      </h5>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sXspd
                        )}
                      >
                        {
                          "Fraud Detector is an application that uses machine learning to detect and prevent fraudulent activities"
                        }
                      </div>
                    </p.Stack>
                  ) : null}
                </div>
                <div className={classNames(projectcss.all, sty.column__vMb4O)}>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"items4"}
                      data-plasmic-override={overrides.items4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.items4)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__lro42)}
                        displayHeight={"90px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/landing_page/images/lockpng.png",
                          fullWidth: 65,
                          fullHeight: 77,
                          aspectRatio: undefined
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__osooj
                        )}
                      >
                        {"Blockwatch Staking"}
                      </h5>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__x0Dj7
                        )}
                      >
                        {
                          "Fraud Detector is an application that uses machine learning to detect and prevent fraudulent activities"
                        }
                      </div>
                    </p.Stack>
                  ) : null}
                </div>
              </p.Stack>
            </div>
          </section>
          <section
            className={classNames(projectcss.all, sty.section__vN1)}
            id={"teams" as const}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qBhXt)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2___5IeQp
                )}
              >
                {"Our Teams"}
              </h2>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__uvm9T)}
              >
                <div className={classNames(projectcss.all, sty.column__unQ8)}>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"items5"}
                      data-plasmic-override={overrides.items5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.items5)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___7K7Sy)}
                        displayHeight={"200px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"200px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/landing_page/images/ceoLucaspng.png",
                          fullWidth: 368,
                          fullHeight: 368,
                          aspectRatio: undefined
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__sOvkh
                        )}
                      >
                        {"Lucas"}
                      </h5>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hw6Z
                        )}
                      >
                        {"CEO"}
                      </div>
                    </p.Stack>
                  ) : null}
                </div>
                <div className={classNames(projectcss.all, sty.column__qbKH)}>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"items6"}
                      data-plasmic-override={overrides.items6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.items6)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__syPr1)}
                        displayHeight={"200px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"200px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/landing_page/images/sofioCmopng.png",
                          fullWidth: 739,
                          fullHeight: 739,
                          aspectRatio: undefined
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__xggdc
                        )}
                      >
                        {"Laura"}
                      </h5>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mAo6
                        )}
                      >
                        {"CMO"}
                      </div>
                    </p.Stack>
                  ) : null}
                </div>
                <div className={classNames(projectcss.all, sty.column___5Hbpv)}>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"items7"}
                      data-plasmic-override={overrides.items7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.items7)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___9RSvb)}
                        displayHeight={"200px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"200px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/landing_page/images/kateFinancepng.png",
                          fullWidth: 705,
                          fullHeight: 705,
                          aspectRatio: undefined
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__pz8Tq
                        )}
                      >
                        {"Kate"}
                      </h5>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mbN6H
                        )}
                      >
                        {"Finance Advisor"}
                      </div>
                    </p.Stack>
                  ) : null}
                </div>
                <div className={classNames(projectcss.all, sty.column___2JSrC)}>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"items8"}
                      data-plasmic-override={overrides.items8}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.items8)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__sh3Bi)}
                        displayHeight={"200px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"200px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/landing_page/images/simonCtOpng.png",
                          fullWidth: 637,
                          fullHeight: 638,
                          aspectRatio: undefined
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__eRcxc
                        )}
                      >
                        {"Simon"}
                      </h5>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__i9XpD
                        )}
                      >
                        {"Blockchain Advisor"}
                      </div>
                    </p.Stack>
                  ) : null}
                </div>
              </p.Stack>
            </p.Stack>
          </section>
          <section
            className={classNames(projectcss.all, sty.section__pEv1Y)}
            id={"roadmap" as const}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__z2Ug)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__sapMf
                )}
              >
                {"Roadmap"}
              </h2>
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___6JRmb)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__p0TzI)}
                    />
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___52ACa
                      )}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__tkQ32)}
                        displayHeight={"42px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"42px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/landing_page/images/dotpng.png",
                          fullWidth: 312,
                          fullHeight: 312,
                          aspectRatio: undefined
                        }}
                      />

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__uzWd7
                          )}
                        >
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__ub042
                            )}
                          >
                            {"Q2 2023"}
                          </h5>
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__lYbIa
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__cxTcp
                              )}
                            >
                              {"Team setup"}
                            </li>
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__n3Mca
                              )}
                            >
                              {"Idea conceptualization"}
                            </li>
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__mJ275
                              )}
                            >
                              {"Social media build-out"}
                            </li>
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__uEiNt
                              )}
                            >
                              {"Website & Whitepaper"}
                            </li>
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__dInaG
                              )}
                            >
                              {"All Utilities Prototype Design "}
                            </li>
                          </ul>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__esJp)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___5ZaiI)}
                        displayHeight={"42px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"42px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/landing_page/images/dotpng.png",
                          fullWidth: 312,
                          fullHeight: 312,
                          aspectRatio: undefined
                        }}
                      />

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__j3X6V
                          )}
                        >
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__hZs0R
                            )}
                          >
                            {"Q3 2023"}
                          </h5>
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__xhc5V
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__sJf5Y
                              )}
                            >
                              {"Building community"}
                            </li>
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__dton
                              )}
                            >
                              {"Massive marketing campaign"}
                            </li>
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__a0QgY
                              )}
                            >
                              {"CertiK + Skynet"}
                            </li>
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__oztFs
                              )}
                            >
                              {"CG & CMC listing"}
                            </li>
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li___5Brel
                              )}
                            >
                              {"Presale on our platform "}
                            </li>
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__uKtSq
                              )}
                            >
                              {"Uniswap listing"}
                            </li>
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__gRm92
                              )}
                            >
                              {"BKEX Listing"}
                            </li>
                          </ul>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__nXzYx)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__tj5N)}
                        displayHeight={"42px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"42px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/landing_page/images/dotpng.png",
                          fullWidth: 312,
                          fullHeight: 312,
                          aspectRatio: undefined
                        }}
                      />

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__hAtUe
                          )}
                        >
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__cDd35
                            )}
                          >
                            {"Q4 2023"}
                          </h5>
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__plzh3
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__b8Qi4
                              )}
                            >
                              {"Growing team & community"}
                            </li>
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__q2IZo
                              )}
                            >
                              {"Networking event conference"}
                            </li>
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__pqNzz
                              )}
                            >
                              {"Connection with venture capital"}
                            </li>
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__ihhDm
                              )}
                            >
                              {"Partnering with Binance Labs"}
                            </li>
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__rc1Ew
                              )}
                            >
                              {"Tier 1 CEX Listing"}
                            </li>
                          </ul>
                        </div>
                      ) : null}
                    </div>
                  ) : null}
                </p.Stack>
              ) : null}
            </p.Stack>
          </section>
          <section className={classNames(projectcss.all, sty.section__olY)}>
            <div className={classNames(projectcss.all, sty.freeBox___75YXn)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__zcuA)}
              >
                <h3
                  data-plasmic-name={"h3"}
                  data-plasmic-override={overrides.h3}
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3
                  )}
                >
                  {" Join  Blockchain & AI Revolution"}
                </h3>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__u0Rlq
                  )}
                >
                  {
                    "Discover a secure future with blockchain technology and artificial intelligence."
                  }
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button__wyPqm)}
                  color={"white" as const}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___29Bx
                    )}
                  >
                    {"Join Whitelist"}
                  </div>
                </Button>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__imvKt)}
                >
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__ydrfq
                    )}
                    component={Link}
                    href={"https://twitter.com/BlockWatchAI" as const}
                    platform={"nextjs"}
                  >
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__ew18M)}
                      role={"img"}
                    />
                  </p.PlasmicLink>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__raZl
                    )}
                    component={Link}
                    href={"https://t.me/+QuWWaBdjmJYyZjI0" as const}
                    platform={"nextjs"}
                  >
                    <Icon3Icon
                      className={classNames(projectcss.all, sty.svg__r9U57)}
                      role={"img"}
                    />
                  </p.PlasmicLink>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__ci4M7
                    )}
                    component={Link}
                    href={
                      "https://blockwatchai.gitbook.io/blockwatchai/" as const
                    }
                    platform={"nextjs"}
                  >
                    <Icon4Icon
                      className={classNames(projectcss.all, sty.svg__eqdwm)}
                      role={"img"}
                    />
                  </p.PlasmicLink>
                </p.Stack>
              </p.Stack>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__taifD)}>
            <div className={classNames(projectcss.all, sty.freeBox__pAiFn)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yfSya
                )}
              >
                {"Copyright BlockwatchAI 2023"}
              </div>
            </div>
          </section>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navigationBar",
    "h6",
    "h1",
    "items",
    "items2",
    "items3",
    "items4",
    "items5",
    "items6",
    "items7",
    "items8",
    "h3"
  ],
  navigationBar: ["navigationBar", "h6"],
  h6: ["h6"],
  h1: ["h1"],
  items: ["items"],
  items2: ["items2"],
  items3: ["items3"],
  items4: ["items4"],
  items5: ["items5"],
  items6: ["items6"],
  items7: ["items7"],
  items8: ["items8"],
  h3: ["h3"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navigationBar: typeof NavigationBar;
  h6: "h6";
  h1: "h1";
  items: "div";
  items2: "div";
  items3: "div";
  items4: "div";
  items5: "div";
  items6: "div";
  items7: "div";
  items8: "div";
  h3: "h3";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navigationBar: makeNodeComponent("navigationBar"),
    h6: makeNodeComponent("h6"),
    h1: makeNodeComponent("h1"),
    items: makeNodeComponent("items"),
    items2: makeNodeComponent("items2"),
    items3: makeNodeComponent("items3"),
    items4: makeNodeComponent("items4"),
    items5: makeNodeComponent("items5"),
    items6: makeNodeComponent("items6"),
    items7: makeNodeComponent("items7"),
    items8: makeNodeComponent("items8"),
    h3: makeNodeComponent("h3"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title:
        "BlockwatchAI | Building Trust  in The Decentralized World with AI",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
